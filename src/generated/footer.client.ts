// @generated by protobuf-ts 2.9.3
// @generated from protobuf file "footer.proto" (package "com.example", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { FooterService } from "./footer";
import type { JsonDataRequest } from "./footer";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { JsonDataResponse } from "./footer";
import type { JsonDataUpdateRequest } from "./footer";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service com.example.FooterService
 */
export interface IFooterServiceClient {
    /**
     * @generated from protobuf rpc: UpdateJsonData(com.example.JsonDataUpdateRequest) returns (com.example.JsonDataResponse);
     */
    updateJsonData(input: JsonDataUpdateRequest, options?: RpcOptions): UnaryCall<JsonDataUpdateRequest, JsonDataResponse>;
    /**
     * @generated from protobuf rpc: GetJsonData(com.example.JsonDataRequest) returns (com.example.JsonDataResponse);
     */
    getJsonData(input: JsonDataRequest, options?: RpcOptions): UnaryCall<JsonDataRequest, JsonDataResponse>;
}
/**
 * @generated from protobuf service com.example.FooterService
 */
export class FooterServiceClient implements IFooterServiceClient, ServiceInfo {
    typeName = FooterService.typeName;
    methods = FooterService.methods;
    options = FooterService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: UpdateJsonData(com.example.JsonDataUpdateRequest) returns (com.example.JsonDataResponse);
     */
    updateJsonData(input: JsonDataUpdateRequest, options?: RpcOptions): UnaryCall<JsonDataUpdateRequest, JsonDataResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<JsonDataUpdateRequest, JsonDataResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetJsonData(com.example.JsonDataRequest) returns (com.example.JsonDataResponse);
     */
    getJsonData(input: JsonDataRequest, options?: RpcOptions): UnaryCall<JsonDataRequest, JsonDataResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<JsonDataRequest, JsonDataResponse>("unary", this._transport, method, opt, input);
    }
}
