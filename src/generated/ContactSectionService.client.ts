// @generated by protobuf-ts 2.9.3
// @generated from protobuf file "ContactSectionService.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ContactSectionService } from "./ContactSectionService";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ContactResponse } from "./ContactSectionService";
import type { ContactRequest } from "./ContactSectionService";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service ContactSectionService
 */
export interface IContactSectionServiceClient {
    /**
     * @generated from protobuf rpc: UpdateContactSection(ContactRequest) returns (ContactResponse);
     */
    updateContactSection(input: ContactRequest, options?: RpcOptions): UnaryCall<ContactRequest, ContactResponse>;
}
/**
 * @generated from protobuf service ContactSectionService
 */
export class ContactSectionServiceClient implements IContactSectionServiceClient, ServiceInfo {
    typeName = ContactSectionService.typeName;
    methods = ContactSectionService.methods;
    options = ContactSectionService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: UpdateContactSection(ContactRequest) returns (ContactResponse);
     */
    updateContactSection(input: ContactRequest, options?: RpcOptions): UnaryCall<ContactRequest, ContactResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ContactRequest, ContactResponse>("unary", this._transport, method, opt, input);
    }
}
